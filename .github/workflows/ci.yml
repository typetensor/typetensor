name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            packages/backend-wasm/wasm/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('packages/backend-wasm/wasm/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Cache wasm-pack
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/wasm-pack
          key: ${{ runner.os }}-wasm-pack-0.12.1
          restore-keys: |
            ${{ runner.os }}-wasm-pack-
      
      - name: Install wasm-pack (Unix)
        if: runner.os != 'Windows'
        run: |
          if ! command -v wasm-pack &> /dev/null; then
            curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          fi
      
      - name: Install wasm-pack (Windows)
        if: runner.os == 'Windows'
        run: |
          if (-not (Test-Path ~/.cargo/bin/wasm-pack.exe)) {
            Invoke-WebRequest -Uri "https://github.com/rustwasm/wasm-pack/releases/download/v0.12.1/wasm-pack-v0.12.1-x86_64-pc-windows-msvc.tar.gz" -OutFile "wasm-pack.tar.gz"
            tar -xzf wasm-pack.tar.gz
            New-Item -ItemType Directory -Force -Path ~/.cargo/bin
            Move-Item "wasm-pack-v0.12.1-x86_64-pc-windows-msvc/wasm-pack.exe" ~/.cargo/bin/
            Remove-Item wasm-pack.tar.gz
            Remove-Item -Recurse "wasm-pack-v0.12.1-x86_64-pc-windows-msvc"
          }
          echo "$env:USERPROFILE\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Build packages
        run: bun run build
      
      - name: Run type checking
        run: bun run typecheck
      
      - name: Run tests
        run: bun run test
      
      - name: Check for changeset (PR only)
        if: github.event_name == 'pull_request'
        run: |
          # Check if there are code changes that require a changeset
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }} || true)
          PACKAGE_CHANGES=$(echo "$CHANGED_FILES" | grep -E '^packages/.*\.(ts|js|json)$' | grep -v -E '(test|spec|\.d\.ts)' || true)
          
          if [ -n "$PACKAGE_CHANGES" ]; then
            echo "Package changes detected, checking for changeset..."
            if ! ls .changeset/*.md 2>/dev/null | grep -v README.md > /dev/null; then
              echo "::error::This PR includes package changes but no changeset. Please run 'bun changeset' to add one."
              exit 1
            fi
            echo "âœ… Changeset found"
          else
            echo "No package changes requiring a changeset"
          fi